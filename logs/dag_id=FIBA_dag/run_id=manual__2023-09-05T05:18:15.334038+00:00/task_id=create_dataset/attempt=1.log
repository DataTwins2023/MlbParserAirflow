[2023-09-05T05:18:18.703+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: FIBA_dag.create_dataset manual__2023-09-05T05:18:15.334038+00:00 [queued]>
[2023-09-05T05:18:18.709+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: FIBA_dag.create_dataset manual__2023-09-05T05:18:15.334038+00:00 [queued]>
[2023-09-05T05:18:18.710+0000] {taskinstance.py:1361} INFO - Starting attempt 1 of 6
[2023-09-05T05:18:18.718+0000] {taskinstance.py:1382} INFO - Executing <Task(BigQueryCreateEmptyDatasetOperator): create_dataset> on 2023-09-05 05:18:15.334038+00:00
[2023-09-05T05:18:18.725+0000] {standard_task_runner.py:57} INFO - Started process 963 to run task
[2023-09-05T05:18:18.729+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'FIBA_dag', 'create_dataset', 'manual__2023-09-05T05:18:15.334038+00:00', '--job-id', '179', '--raw', '--subdir', 'DAGS_FOLDER/FIBA.py', '--cfg-path', '/tmp/tmpchn0vssy']
[2023-09-05T05:18:18.732+0000] {standard_task_runner.py:85} INFO - Job 179: Subtask create_dataset
[2023-09-05T05:18:18.763+0000] {task_command.py:415} INFO - Running <TaskInstance: FIBA_dag.create_dataset manual__2023-09-05T05:18:15.334038+00:00 [running]> on host 8ce2b8fabb21
[2023-09-05T05:18:18.823+0000] {taskinstance.py:1660} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='andy_hsu' AIRFLOW_CTX_DAG_ID='FIBA_dag' AIRFLOW_CTX_TASK_ID='create_dataset' AIRFLOW_CTX_EXECUTION_DATE='2023-09-05T05:18:15.334038+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2023-09-05T05:18:15.334038+00:00'
[2023-09-05T05:18:18.833+0000] {connection.py:232} WARNING - Connection schemes (type: google_cloud_platform) shall not contain '_' according to RFC3986.
[2023-09-05T05:18:18.837+0000] {base.py:73} INFO - Using connection ID 'gcp_connection' for task execution.
[2023-09-05T05:18:18.841+0000] {taskinstance.py:1943} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/google/cloud/operators/bigquery.py", line 2000, in execute
    dataset = bq_hook.create_empty_dataset(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/google/common/hooks/base_google.py", line 458, in inner_wrapper
    kwargs["project_id"] = kwargs["project_id"] or self.project_id
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/google/common/hooks/base_google.py", line 353, in project_id
    _, project_id = self.get_credentials_and_project_id()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/google/common/hooks/base_google.py", line 265, in get_credentials_and_project_id
    credentials, project_id = get_credentials_and_project_id(
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/google/cloud/utils/credentials_provider.py", line 362, in get_credentials_and_project_id
    return _CredentialProvider(*args, **kwargs).get_credentials_and_project()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/google/cloud/utils/credentials_provider.py", line 235, in get_credentials_and_project
    credentials, project_id = self._get_credentials_using_key_path()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/google/cloud/utils/credentials_provider.py", line 286, in _get_credentials_using_key_path
    credentials = google.oauth2.service_account.Credentials.from_service_account_file(
  File "/home/airflow/.local/lib/python3.8/site-packages/google/oauth2/service_account.py", line 260, in from_service_account_file
    info, signer = _service_account_info.from_filename(
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/_service_account_info.py", line 82, in from_filename
    return data, from_dict(data, require=require, use_rsa_signer=use_rsa_signer)
  File "/home/airflow/.local/lib/python3.8/site-packages/google/auth/_service_account_info.py", line 52, in from_dict
    raise exceptions.MalformedError(
google.auth.exceptions.MalformedError: Service account info was not in the expected format, missing fields client_email, token_uri.
[2023-09-05T05:18:18.853+0000] {taskinstance.py:1400} INFO - Marking task as UP_FOR_RETRY. dag_id=FIBA_dag, task_id=create_dataset, execution_date=20230905T051815, start_date=20230905T051818, end_date=20230905T051818
[2023-09-05T05:18:18.862+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 179 for task create_dataset (Service account info was not in the expected format, missing fields client_email, token_uri.; 963)
[2023-09-05T05:18:18.902+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2023-09-05T05:18:18.913+0000] {taskinstance.py:2784} INFO - 0 downstream tasks scheduled from follow-on schedule check
